@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Liquid Glass Dark Aesthetic - Grainy, Ethereal, Transparent */
    --background: 0 0% 4%;
    --foreground: 280 20% 95%;

    --card: 280 15% 8%;
    --card-foreground: 280 20% 95%;

    --popover: 280 20% 6%;
    --popover-foreground: 280 20% 95%;

    --primary: 320 70% 65%;
    --primary-foreground: 280 20% 10%;

    --secondary: 280 50% 50%;
    --secondary-foreground: 280 20% 95%;

    --muted: 280 15% 12%;
    --muted-foreground: 280 10% 60%;

    --accent: 35 80% 60%;
    --accent-foreground: 280 20% 10%;

    --destructive: 0 70% 55%;
    --destructive-foreground: 280 20% 95%;

    --border: 280 15% 15%;
    --input: 280 15% 12%;
    --ring: 320 70% 65%;

    --radius: 1rem;

    /* Custom liquid glass variables */
    --glass-bg: 280 15% 10%;
    --glass-border: 280 20% 20%;
    --glow-purple: 280 80% 60%;
    --glow-pink: 320 70% 65%;
    --glow-orange: 35 80% 60%;
    --glow-cyan: 180 70% 60%;
    
    /* Animations */
    --transition-smooth: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-slow: all 1.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    background-image: 
      radial-gradient(at 20% 30%, hsla(280, 80%, 60%, 0.15) 0px, transparent 50%),
      radial-gradient(at 80% 70%, hsla(320, 70%, 65%, 0.15) 0px, transparent 50%),
      radial-gradient(at 50% 50%, hsla(35, 80%, 60%, 0.1) 0px, transparent 50%);
    background-attachment: fixed;
  }

  /* Grainy texture overlay */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='3.5' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.25'/%3E%3C/svg%3E");
    pointer-events: none;
    opacity: 0.3;
    z-index: 1;
  }

  /* Glass morphism utility classes */
  .glass {
    background: rgba(255, 255, 255, 0.03);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.08);
  }

  .glass-strong {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(30px);
    border: 1px solid rgba(255, 255, 255, 0.12);
  }

  /* Glow effects */
  .glow-purple {
    box-shadow: 0 0 40px hsla(var(--glow-purple), 0.3);
  }

  .glow-pink {
    box-shadow: 0 0 40px hsla(var(--glow-pink), 0.3);
  }

  .glow-orange {
    box-shadow: 0 0 40px hsla(var(--glow-orange), 0.3);
  }

  /* Smooth transitions */
  .transition-smooth {
    transition: var(--transition-smooth);
  }

  .transition-slow {
    transition: var(--transition-slow);
  }
}

@layer utilities {
  .animate-gradient {
    background-size: 200% 200%;
    animation: gradient 8s ease infinite;
  }

  @keyframes gradient {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  .animate-glow {
    animation: glow 4s ease-in-out infinite;
  }

  @keyframes glow {
    0%, 100% {
      opacity: 0.5;
      filter: blur(20px);
    }
    50% {
      opacity: 0.8;
      filter: blur(30px);
    }
  }
}
